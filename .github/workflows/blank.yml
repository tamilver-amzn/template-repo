name: repo-creation

on:
  workflow_dispatch:
    inputs:
      new_repo_name:
        description: 'Name of the new repository'
        required: true
      new_repo_description:
        description: 'Description of the new repository'
        required: false
        default: ''
      visibility:
        description: 'Repository visibility (public/private)'
        required: true
        default: 'private'

jobs:
  create_repo:
    runs-on: ubuntu-latest
    steps:
    - name: Create empty repository
      env:
        GH_TOKEN: ${{ secrets.REPO_CREATION_TOKEN }}
      run: |
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /user/repos \
          -f name="${{ github.event.inputs.new_repo_name }}" \
          -f description="${{ github.event.inputs.new_repo_description }}" \
          -F private=${{ github.event.inputs.visibility == 'private' }}

    - name: Copy files from template
      env:
        GH_TOKEN: ${{ secrets.REPO_CREATION_TOKEN }}
      run: |
        # Function to get files recursively
        get_files() {
          local path=$1
          local files=$(gh api /repos/${{ github.repository_owner }}/template-repo/contents/$path | jq -r '.[] | select(.type!="dir") | .path')
          local dirs=$(gh api /repos/${{ github.repository_owner }}/template-repo/contents/$path | jq -r '.[] | select(.type=="dir") | .path')
          
          for file in $files; do
            echo $file
          done
          
          for dir in $dirs; do
            get_files $dir
          done
        }

        # Get the list of files recursively
        files=$(get_files "")

        # Print the list of files
        echo "Files to be copied:"
        echo "$files"
        
        # Copy each file to the new repository, excluding .github folder
        for file in $files; do
          if [[ $file != .github/workflows/blank.yml ]]; then
            content=$(gh api /repos/${{ github.repository_owner }}/template-repo/contents/$file | jq -r '.content')
            gh api \
              --method PUT \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository_owner }}/${{ github.event.inputs.new_repo_name }}/contents/$file \
              -f message="Initial commit" \
              -f content="$content"
          fi
        done
